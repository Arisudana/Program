import java.util.Scanner;

public class RabbitHouse{
	public static void main(String[] args){
		Scanner in = new Scanner(System.in);

        String[] input = in.nextLine().split(" ");

		if (input[0].equals("normal")){
			System.out.println(countBunnies(input[1].length(),1));
		}

		else if (input[0].equals("palindrom")){
			System.out.println(bunnyMaker(input[1]));
		}

	}

	//MANDATORY WITH KEEPING PREVIOUS NUMBER

	static long countBunnies(int length, int prevNumber){
		if (length == 1) return 1;
		else return length * prevNumber + countBunnies(length-1,length * prevNumber);
	}

	//MANDATORY WITH FACTORIAL FUNCTION

	static long factorialCountBunnies(String name, int originalSize){
		if (name.length() < 1) {
			return 0;
		}
		else return factorial(originalSize) / factorial(name.length()) + factorialCountBunnies(name.substring(1),originalSize);
	}

	static long factorial(long n){
		if (n <= 1) return 1;
		else return n * factorial(n-1);
	}

	//MANDATORY WITH HELPER METHOD

	public static long recursive(Integer length){
		if(length == 1){
			return 1;
		}
		return 1 + length*recursive(length-1);
	}

	public static long helper(String word){
		return recursive(word.length());
	}


	//BONUS

	static long bunnyMaker(String name){
		if (isPalindrom(name)) {
		System.out.println(name+" palindrom");
		return 0;
		}		//cek palindrom disini
		if (name.length() < 1) return 0;
		else return 1 + removeALetter(name,0);			//memanggil method removeALetter dengan nama dirinya
	}

	static long removeALetter(String name, int index){	//fungsi untuk potong-potong String
		if (index > name.length()-1) return 0;
		return bunnyMaker(name.substring(0,index) + name.substring(index+1,name.length())) + removeALetter(name,index+1);

	}

	static boolean isPalindrom(String input){
		if (input.length() <= 1) return true;
		input = input.toLowerCase();
		if (input.charAt(0) == input.charAt(input.length()-1)) return isPalindrom(input.substring(1,input.length()-1));
		else return false;
	}

	}
